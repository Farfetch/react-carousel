{"version":3,"sources":["../src/body-empty.test.js"],"names":["messages","empty","filled","parsed","t","actual","expected","is"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,WAAW;AAChBC,QAAO,eADS;AAEhBC,SAAQ;AAFQ,CAAjB;;AAKA,MAAMC,SAAS;AACdF,QAAO,qBAAMD,SAASC,KAAf,CADO;AAEdC,SAAQ,qBAAMF,SAASE,MAAf;AAFM,CAAf;;AAKA,mBAAK,kDAAL,EAA+DE,CAAN;AAAA;;AAC7B,wBAAMD,OAAOF,KAAb;AAAA;AAAA,gBAAV,0BAAU,QAAV,CAAU;AAApBI,SAAoB;AACrBC,WADqB,GACV,IADU;;AAE3BF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAF2B;AAAA;AAAA;AAAA;AAAA;AAD6B,aAAzD;;AAMA,mBAAK,yCAAL,EAAsDF,CAAN;AAAA;;AACpB,wBAAMD,OAAOF,KAAb;AAAA;AAAA,iBAAV,0BAAU,QAAV,EAA8B,OAA9B,CAAU;AAApBI,SAAoB;AACrBC,WADqB,GACV,KADU;;AAE3BF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAF2B;AAAA;AAAA;AAAA;AAAA;AADoB,aAAhD;;AAMA,mBAAK,6CAAL,EAA0DF,CAAN;AAAA;;AACxB,wBAAMD,OAAOF,KAAb;AAAA;AAAA,iBAAV,0BAAU,QAAV,EAA8B,QAA9B,CAAU;AAApBI,SAAoB;AACrBC,WADqB,GACV,IADU;;AAE3BF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAF2B;AAAA;AAAA;AAAA;AAAA;AADwB,aAApD;;AAMA,mBAAK,yCAAL,EAAsDF,CAAN;AAAA;;AACpB,wBAAMD,OAAOD,MAAb;AAAA;AAAA,iBAAV,0BAAU,QAAV,CAAU;AAApBG,SAAoB;AACrBC,WADqB,GACV,KADU;;AAE3BF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAF2B;AAAA;AAAA;AAAA;AAAA;AADoB,aAAhD;;AAMA,mBAAK,sCAAL,EAAmDF,CAAN;AAAA;;AACjB,wBAAMD,OAAOD,MAAb;AAAA;AAAA,iBAAV,0BAAU,QAAV,EAA+B,OAA/B,CAAU;AAApBG,SAAoB;AACrBC,WADqB,GACV,IADU;;AAE3BF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAF2B;AAAA;AAAA;AAAA;AAAA;AADiB,aAA7C;;AAMA,mBAAK,oCAAL,EAAiDF,CAAN;AAAA;;AACf,wBAAMD,OAAOD,MAAb;AAAA;AAAA,kBAAV,0BAAU,QAAV,EAA+B,QAA/B,CAAU;AAApBG,SAAoB;AACrBC,WADqB,GACV,KADU;;AAE3BF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAF2B;AAAA;AAAA;AAAA;AAAA;AADe,aAA3C","file":"body-empty.test.js","sourcesContent":["import test from 'ava';\nimport parse from '@commitlint/parse';\nimport bodyEmpty from './body-empty';\n\nconst messages = {\n\tempty: 'test: subject',\n\tfilled: 'test: subject\\nbody'\n};\n\nconst parsed = {\n\tempty: parse(messages.empty),\n\tfilled: parse(messages.filled)\n};\n\ntest('with empty body should succeed for empty keyword', async t => {\n\tconst [actual] = bodyEmpty(await parsed.empty);\n\tconst expected = true;\n\tt.is(actual, expected);\n});\n\ntest('with empty body should fail for \"never\"', async t => {\n\tconst [actual] = bodyEmpty(await parsed.empty, 'never');\n\tconst expected = false;\n\tt.is(actual, expected);\n});\n\ntest('with empty body should succeed for \"always\"', async t => {\n\tconst [actual] = bodyEmpty(await parsed.empty, 'always');\n\tconst expected = true;\n\tt.is(actual, expected);\n});\n\ntest('with body should fail for empty keyword', async t => {\n\tconst [actual] = bodyEmpty(await parsed.filled);\n\tconst expected = false;\n\tt.is(actual, expected);\n});\n\ntest('with body should succeed for \"never\"', async t => {\n\tconst [actual] = bodyEmpty(await parsed.filled, 'never');\n\tconst expected = true;\n\tt.is(actual, expected);\n});\n\ntest('with body should fail for \"always\"', async t => {\n\tconst [actual] = bodyEmpty(await parsed.filled, 'always');\n\tconst expected = false;\n\tt.is(actual, expected);\n});\n"]}