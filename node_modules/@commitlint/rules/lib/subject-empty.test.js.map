{"version":3,"sources":["../src/subject-empty.test.js"],"names":["messages","empty","filled","parsed","t","actual","expected","is"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,WAAW;AAChBC,QAAO,cADS;AAEhBC,SAAQ;AAFQ,CAAjB;;AAKA,MAAMC,SAAS;AACdF,QAAO,qBAAMD,SAASC,KAAf,CADO;AAEdC,SAAQ,qBAAMF,SAASE,MAAf;AAFM,CAAf;;AAKA,mBAAK,kDAAL,EAA+DE,CAAN;AAAA;;AAC1B,wBAAMD,OAAOF,KAAb;AAAA;AAAA,mBAAb,6BAAa,QAAb,CAAa;AAAvBI,SAAuB;AACxBC,WADwB,GACb,IADa;;AAE9BF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAF8B;AAAA;AAAA;AAAA;AAAA;AAD0B,aAAzD;;AAMA,mBAAK,yCAAL,EAAsDF,CAAN;AAAA;;AACjB,wBAAMD,OAAOF,KAAb;AAAA;AAAA,oBAAb,6BAAa,QAAb,EAAiC,OAAjC,CAAa;AAAvBI,SAAuB;AACxBC,WADwB,GACb,KADa;;AAE9BF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAF8B;AAAA;AAAA;AAAA;AAAA;AADiB,aAAhD;;AAMA,mBAAK,6CAAL,EAA0DF,CAAN;AAAA;;AACrB,wBAAMD,OAAOF,KAAb;AAAA;AAAA,oBAAb,6BAAa,QAAb,EAAiC,QAAjC,CAAa;AAAvBI,SAAuB;AACxBC,WADwB,GACb,IADa;;AAE9BF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAF8B;AAAA;AAAA;AAAA;AAAA;AADqB,aAApD;;AAMA,mBAAK,qCAAL,EAAkDF,CAAN;AAAA;;AACb,wBAAMD,OAAOD,MAAb;AAAA;AAAA,oBAAb,6BAAa,QAAb,CAAa;AAAvBG,SAAuB;AACxBC,WADwB,GACb,KADa;;AAE9BF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAF8B;AAAA;AAAA;AAAA;AAAA;AADa,aAA5C;;AAMA,mBAAK,kCAAL,EAA+CF,CAAN;AAAA;;AACV,wBAAMD,OAAOD,MAAb;AAAA;AAAA,oBAAb,6BAAa,QAAb,EAAkC,OAAlC,CAAa;AAAvBG,SAAuB;AACxBC,WADwB,GACb,IADa;;AAE9BF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAF8B;AAAA;AAAA;AAAA;AAAA;AADU,aAAzC;;AAMA,mBAAK,gCAAL,EAA6CF,CAAN;AAAA;;AACR,wBAAMD,OAAOD,MAAb;AAAA;AAAA,qBAAb,6BAAa,QAAb,EAAkC,QAAlC,CAAa;AAAvBG,SAAuB;AACxBC,WADwB,GACb,KADa;;AAE9BF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAF8B;AAAA;AAAA;AAAA;AAAA;AADQ,aAAvC","file":"subject-empty.test.js","sourcesContent":["import test from 'ava';\nimport parse from '@commitlint/parse';\nimport subjectEmpty from './subject-empty';\n\nconst messages = {\n\tempty: 'test: \\nbody',\n\tfilled: 'test: subject\\nbody'\n};\n\nconst parsed = {\n\tempty: parse(messages.empty),\n\tfilled: parse(messages.filled)\n};\n\ntest('without subject should succeed for empty keyword', async t => {\n\tconst [actual] = subjectEmpty(await parsed.empty);\n\tconst expected = true;\n\tt.is(actual, expected);\n});\n\ntest('without subject should fail for \"never\"', async t => {\n\tconst [actual] = subjectEmpty(await parsed.empty, 'never');\n\tconst expected = false;\n\tt.is(actual, expected);\n});\n\ntest('without subject should succeed for \"always\"', async t => {\n\tconst [actual] = subjectEmpty(await parsed.empty, 'always');\n\tconst expected = true;\n\tt.is(actual, expected);\n});\n\ntest('with subject fail for empty keyword', async t => {\n\tconst [actual] = subjectEmpty(await parsed.filled);\n\tconst expected = false;\n\tt.is(actual, expected);\n});\n\ntest('with subject succeed for \"never\"', async t => {\n\tconst [actual] = subjectEmpty(await parsed.filled, 'never');\n\tconst expected = true;\n\tt.is(actual, expected);\n});\n\ntest('with subject fail for \"always\"', async t => {\n\tconst [actual] = subjectEmpty(await parsed.filled, 'always');\n\tconst expected = false;\n\tt.is(actual, expected);\n});\n"]}