{"version":3,"sources":["../src/type-min-length.test.js"],"names":["short","long","value","length","messages","empty","parsed","t","actual","expected","is"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,QAAQ,GAAd;AACA,MAAMC,OAAO,IAAb;;AAEA,MAAMC,QAAQD,KAAKE,MAAnB;;AAEA,MAAMC,WAAW;AAChBC,QAAO,OADS;AAEhBL,QAAQ,GAAEA,KAAM,MAFA;AAGhBC,OAAO,GAAEA,IAAK;AAHE,CAAjB;;AAMA,MAAMK,SAAS;AACdD,QAAO,qBAAMD,SAASC,KAAf,CADO;AAEdL,QAAO,qBAAMI,SAASJ,KAAf,CAFO;AAGdC,OAAM,qBAAMG,SAASH,IAAf;AAHQ,CAAf;;AAMA,mBAAK,2BAAL,EAAwCM,CAAN;AAAA;;AACV,wBAAMD,OAAOD,KAAb;AAAA;AAAA,YAAN,6BAAM,QAAN,EAA0B,EAA1B,EAA8BH,KAA9B,CAAM;AAAhBM,SAAgB;AACjBC,WADiB,GACN,IADM;;AAEvBF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAFuB;AAAA;AAAA;AAAA;AAAA;AADU,aAAlC;;AAMA,mBAAK,wBAAL,EAAqCF,CAAN;AAAA;;AACP,wBAAMD,OAAON,KAAb;AAAA;AAAA,aAAN,6BAAM,QAAN,EAA0B,EAA1B,EAA8BE,KAA9B,CAAM;AAAhBM,SAAgB;AACjBC,WADiB,GACN,KADM;;AAEvBF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAFuB;AAAA;AAAA;AAAA;AAAA;AADO,aAA/B;;AAMA,mBAAK,0BAAL,EAAuCF,CAAN;AAAA;;AACT,wBAAMD,OAAOL,IAAb;AAAA;AAAA,aAAN,6BAAM,QAAN,EAAyB,EAAzB,EAA6BC,KAA7B,CAAM;AAAhBM,SAAgB;AACjBC,WADiB,GACN,IADM;;AAEvBF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAFuB;AAAA;AAAA;AAAA;AAAA;AADS,aAAjC","file":"type-min-length.test.js","sourcesContent":["import test from 'ava';\nimport parse from '@commitlint/parse';\nimport check from './type-min-length';\n\nconst short = 'a';\nconst long = 'ab';\n\nconst value = long.length;\n\nconst messages = {\n\tempty: '():\\n',\n\tshort: `${short}: \\n`,\n\tlong: `${long}: \\n`\n};\n\nconst parsed = {\n\tempty: parse(messages.empty),\n\tshort: parse(messages.short),\n\tlong: parse(messages.long)\n};\n\ntest('with empty should succeed', async t => {\n\tconst [actual] = check(await parsed.empty, '', value);\n\tconst expected = true;\n\tt.is(actual, expected);\n});\n\ntest('with short should fail', async t => {\n\tconst [actual] = check(await parsed.short, '', value);\n\tconst expected = false;\n\tt.is(actual, expected);\n});\n\ntest('with long should succeed', async t => {\n\tconst [actual] = check(await parsed.long, '', value);\n\tconst expected = true;\n\tt.is(actual, expected);\n});\n"]}