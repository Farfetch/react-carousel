{"version":3,"sources":["../src/subject-max-length.test.js"],"names":["short","long","value","length","messages","empty","parsed","t","actual","expected","is"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,QAAQ,GAAd;AACA,MAAMC,OAAO,IAAb;;AAEA,MAAMC,QAAQF,MAAMG,MAApB;;AAEA,MAAMC,WAAW;AAChBC,QAAO,SADS;AAEhBL,QAAQ,SAAQA,KAAM,IAFN;AAGhBC,OAAO,SAAQA,IAAK;AAHJ,CAAjB;;AAMA,MAAMK,SAAS;AACdD,QAAO,qBAAMD,SAASC,KAAf,CADO;AAEdL,QAAO,qBAAMI,SAASJ,KAAf,CAFO;AAGdC,OAAM,qBAAMG,SAASH,IAAf;AAHQ,CAAf;;AAMA,mBAAK,2BAAL,EAAwCM,CAAN;AAAA;;AACV,wBAAMD,OAAOD,KAAb;AAAA;AAAA,YAAN,gCAAM,QAAN,EAA0B,EAA1B,EAA8BH,KAA9B,CAAM;AAAhBM,SAAgB;AACjBC,WADiB,GACN,IADM;;AAEvBF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAFuB;AAAA;AAAA;AAAA;AAAA;AADU,aAAlC;;AAMA,mBAAK,2BAAL,EAAwCF,CAAN;AAAA;;AACV,wBAAMD,OAAON,KAAb;AAAA;AAAA,aAAN,gCAAM,QAAN,EAA0B,EAA1B,EAA8BE,KAA9B,CAAM;AAAhBM,SAAgB;AACjBC,WADiB,GACN,IADM;;AAEvBF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAFuB;AAAA;AAAA;AAAA;AAAA;AADU,aAAlC;;AAMA,mBAAK,uBAAL,EAAoCF,CAAN;AAAA;;AACN,wBAAMD,OAAOL,IAAb;AAAA;AAAA,aAAN,gCAAM,QAAN,EAAyB,EAAzB,EAA6BC,KAA7B,CAAM;AAAhBM,SAAgB;AACjBC,WADiB,GACN,KADM;;AAEvBF,KAAEG,EAAF,CAAKF,MAAL,EAAaC,QAAb;AAFuB;AAAA;AAAA;AAAA;AAAA;AADM,aAA9B","file":"subject-max-length.test.js","sourcesContent":["import test from 'ava';\nimport parse from '@commitlint/parse';\nimport check from './subject-max-length';\n\nconst short = 'a';\nconst long = 'ab';\n\nconst value = short.length;\n\nconst messages = {\n\tempty: 'test:\\n',\n\tshort: `test: ${short}\\n`,\n\tlong: `test: ${long}\\n`\n};\n\nconst parsed = {\n\tempty: parse(messages.empty),\n\tshort: parse(messages.short),\n\tlong: parse(messages.long)\n};\n\ntest('with empty should succeed', async t => {\n\tconst [actual] = check(await parsed.empty, '', value);\n\tconst expected = true;\n\tt.is(actual, expected);\n});\n\ntest('with short should succeed', async t => {\n\tconst [actual] = check(await parsed.short, '', value);\n\tconst expected = true;\n\tt.is(actual, expected);\n});\n\ntest('with long should fail', async t => {\n\tconst [actual] = check(await parsed.long, '', value);\n\tconst expected = false;\n\tt.is(actual, expected);\n});\n"]}